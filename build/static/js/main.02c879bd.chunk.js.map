{"version":3,"sources":["common/unique-entity.js","common/particle.js","common/constants.js","common/link.js","common/motion-process.js","components/background.js","App.js","serviceWorker.js","index.js"],"names":["UniqueEntity","this","uuid","Particle","x","y","vel","parity","acc","ctx","beginPath","fillStyle","arc","Math","PI","fill","position","dimension","Link","from","to","opacity","strokeStyle","moveTo","lineTo","stroke","dist","toFixed","toString","DIMENSIONS","MotionProcess","particles_num","paused","timers","links_search","field_size","canvas","width","height","particles_pool","links_pool","square_size","links_registry","current_frame","tick","processTick","bind","translate","initParticles","requestAnimationFrame","drawTick","drawField","shiftParticles","drawLinks","handleAcceleration","x_squares","floor","y_squares","column","push","i","round","random","next_particle","pool_x_idx","ceil","pool_y_idx","fillRect","forEach","x_pool","x_idx","y_pool","y_idx","particle","next_position","dim","next","end_border","invertVelocity","abs","setPosition","drawSelf","col","pool","last_position","shift","getPoolShift","migrateParticle","cur","cur_pos","cur_pool","next_pool","cur_idx","indexOf","splice","createLinks","link","getDistance","removeLink","setOpacity","checked","checkPair","particle_1","particle_2","id_1","id_2","addLinkRegistryEntry","checkTwoSquaresParticles","square","neighbour","length","j","checkSelfParticles","x_cur","y_cur","checkNeighbourSquares","link_id","idx","findIndex","item","sqrt","center","len","setAcceleration","Background","props","state","motion_process","document","getElementById","getContext","window","innerWidth","innerHeight","setState","start","id","React","Component","App","className","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAEqBA,EACnB,aAAe,oBACbC,KAAKC,KAAOA,OCDKC,E,YACnB,WAAYC,EAAGC,EAAGC,EAAKC,GAAS,IAAD,8BAC7B,+CACKH,EAAIA,EACT,EAAKC,EAAIA,EACT,EAAKC,IAAMA,EACX,EAAKC,OAASA,EACd,EAAKC,IAAM,CAACJ,EAAG,EAAGC,EAAG,GANQ,E,sEAStBI,GACPA,EAAIC,YACJD,EAAIE,UAAY,UAChBF,EAAIG,IAAIX,KAAKG,EAAGH,KAAKI,EChBM,EDgBc,EAAG,EAAIQ,KAAKC,IACrDL,EAAIM,S,kCAGMC,GACVf,KAAKG,EAAIY,EAASZ,EAClBH,KAAKI,EAAIW,EAASX,I,sCAGJG,GACdP,KAAKK,IAAM,CAACF,EAAGH,KAAKK,IAAIF,EAAII,EAAIJ,EAAGC,EAAGJ,KAAKK,IAAID,EAAIG,EAAIH,K,qCAG1CY,GACbhB,KAAKK,IAAM,CACTF,EAAGH,KAAKK,IAAIF,GAAmB,MAAda,GAAqB,EAAI,GAC1CZ,EAAGJ,KAAKK,IAAID,GAAmB,MAAdY,GAAqB,EAAI,Q,GA7BVjB,GEAjBkB,E,YACnB,WAAYC,EAAMC,GAAK,IAAD,8BACpB,+CACKD,KAAOA,EACZ,EAAKC,GAAKA,EACV,EAAKC,QAAU,KAJK,E,sEAObZ,GACPA,EAAIC,YACJD,EAAIa,YAAc,UAAYrB,KAAKoB,QACnCZ,EAAIc,OAAOtB,KAAKkB,KAAKf,EAAGH,KAAKkB,KAAKd,GAClCI,EAAIe,OAAOvB,KAAKmB,GAAGhB,EAAGH,KAAKmB,GAAGf,GAC9BI,EAAIgB,W,iCAGKC,GACTzB,KAAKoB,SDjBwB,ICiBOK,EAAKC,QAAQ,IAAIC,SAAS,Q,GAjBhC5B,G,yjBCQlC,IAAM6B,EAAa,CAAC,IAAK,KAEJC,E,WACnB,WAAYrB,EAAKsB,GAAgB,oBAC/B9B,KAAKQ,IAAMA,EACXR,KAAK8B,cAAgBA,EACrB9B,KAAK+B,QAAS,EACd/B,KAAKgC,OAAS,CACZC,aAAc,GAEhBjC,KAAKkC,WAAa,CAAC/B,EAAGK,EAAI2B,OAAOC,MAAOhC,EAAGI,EAAI2B,OAAOE,QACtDrC,KAAKsC,eAAiB,GACtBtC,KAAKuC,WAAa,GAClBvC,KAAKwC,YAAc,CAACrC,EAAG,EAAGC,EAAG,GAC7BJ,KAAKyC,eAAiB,GACtBzC,KAAK0C,cAAgB,KACrB1C,KAAK2C,KAAO3C,KAAK4C,YAAYC,KAAK7C,M,oDAIlCA,KAAKQ,IAAIsC,UAAU,GAAK,IACxB9C,KAAK+C,gBACL/C,KAAK+B,QAAS,EACdiB,sBAAsBhD,KAAK2C,Q,oCAI3B3C,KAAKiD,WAEAjD,KAAK+B,SACR/B,KAAK0C,cAAgBM,sBAAsBhD,KAAK2C,S,iCAKlD3C,KAAKkD,YACLlD,KAAKmD,iBACLnD,KAAKoD,YACLpD,KAAKqD,uB,sCAIL,IAAMC,EAAY1C,KAAK2C,MAAMvD,KAAKkC,WAAW/B,EFlDhB,KEmDvBqD,EAAY5C,KAAK2C,MAAMvD,KAAKkC,WAAW9B,EFnDhB,KEqD7BJ,KAAKwC,YAAYrC,EAAIH,KAAKkC,WAAW/B,EAAImD,EACzCtD,KAAKwC,YAAYpC,EAAIJ,KAAKkC,WAAW9B,EAAIoD,EAEzC,IAAK,IAAIrD,EAAI,EAAGA,EAAImD,EAAWnD,IAAK,CAGlC,IAFA,IAAMsD,EAAS,GAENrD,EAAI,EAAGA,EAAIoD,EAAWpD,IAC7BqD,EAAOC,KAAK,IAGd1D,KAAKsC,eAAeoB,KAAKD,GAG3B,IAAK,IAAIE,EAAI,EAAGA,EAAI3D,KAAK8B,cAAe6B,IAAK,CAC3C,IAAMxD,EAAIS,KAAKgD,MAAMhD,KAAKiD,SAAY7D,KAAKkC,WAAW/B,GAChDC,EAAIQ,KAAKgD,MAAMhD,KAAKiD,SAAY7D,KAAKkC,WAAW9B,GAChDC,EAAM,CACVF,IFxE6B,IEwEvBS,KAAKiD,SAAW,KAA8BnC,QAAQ,GAC5DtB,IFzE6B,IEyEvBQ,KAAKiD,SAAW,KAA8BnC,QAAQ,IAExDoC,EAAgB,IAAI5D,EAASC,EAAGC,EAAGC,EAAKsD,EFvE1B,GEwEdI,GAAcnD,KAAKoD,KAAK7D,EAAIH,KAAKwC,YAAYrC,IAAM,GAAK,EACxD8D,GAAcrD,KAAKoD,KAAK5D,EAAIJ,KAAKwC,YAAYpC,IAAM,GAAK,EAE9DJ,KAAKsC,eAAeyB,GAAYE,GAAYP,KAAKI,M,kCAKnD9D,KAAKQ,IAAIE,UFnFmB,UEoF5BV,KAAKQ,IAAI0D,SAAS,EAAG,EAAGlE,KAAKkC,WAAW/B,EAAGH,KAAKkC,WAAW9B,K,uCAG3C,IAAD,OACfJ,KAAKsC,eAAe6B,SAAQ,SAACC,EAAQC,GACnCD,EAAOD,SAAQ,SAACG,EAAQC,GACtBD,EAAOH,SAAQ,SAAAK,GACb,IAAMC,EAAgB,GAEtB7C,EAAWuC,SAAQ,SAAAO,GACjB,IAAIC,EAAOH,EAASE,GAAOF,EAASnE,IAAIqE,GAClCE,EAAa,EAAK1C,WAAWwC,GFjGhB,EEmGfC,EAAOC,GAAcJ,EAASnE,IAAIqE,GAAO,GAC3CC,EAAO,EAAIC,EAAaJ,EAASnE,IAAIqE,GAAOF,EAASE,GFpGpC,EEqGjBF,EAASK,eAAeH,IACfC,EFtGQ,GEsGkBH,EAASnE,IAAIqE,GAAO,IACvDC,EAAO/D,KAAKkE,IAAIN,EAASnE,IAAIqE,IAAQF,EAASE,GFvG7B,EEwGjBF,EAASK,eAAeH,IAG1BD,EAAcC,GAAOC,KAGvBH,EAASO,YAAYN,GACrBD,EAASQ,SAAS,EAAKxE,cAI7BR,KAAKsC,eAAe6B,SAAQ,SAACc,EAAKZ,GAChCY,EAAId,SAAQ,SAACe,EAAMX,GACjBW,EAAKf,SAAQ,SAAAK,GACX,IAAMW,EAAgB,CAAChF,EAAGkE,EAAOjE,EAAGmE,GAC9Ba,EAAQ,EAAKC,aAAaF,EAAeX,IAE3CY,EAAMjF,GAAKiF,EAAMhF,IACnB,EAAKkF,gBAAgBd,EAAUW,EAAeC,c,mCAO3CG,EAAKZ,GAAO,IAAD,OAChBS,EAAQ,CAACjF,EAAG,EAAGC,EAAG,GAUxB,OARAwB,EAAWuC,SAAQ,SAAAO,GACbC,EAAKD,GAAO,EAAKlC,YAAYkC,GAAOa,EAAIb,GAAO,EACjDU,EAAMV,KACGC,EAAKD,GAAO,EAAKlC,YAAYkC,GAAOa,EAAIb,IACjDU,EAAMV,QAIHU,I,sCAGOZ,EAAUgB,EAASJ,GACjC,IAAMK,EAAWzF,KAAKsC,eAAekD,EAAQrF,GAAGqF,EAAQpF,GAClDsF,EAAY1F,KAAKsC,eAAekD,EAAQrF,EAAIiF,EAAMjF,GAAGqF,EAAQpF,EAAIgF,EAAMhF,GACvEuF,EAAUF,EAASG,QAAQpB,GAEjCiB,EAASI,OAAOF,EAAS,GACzBD,EAAUhC,KAAKc,K,kCAGJ,IAAD,OACVxE,KAAK8F,cACL9F,KAAKuC,WAAW4B,SAAQ,SAAA4B,GACtB,IAAMtE,EAAO,EAAKuE,YAAYD,EAAK7E,KAAM6E,EAAK5E,IAC1CM,EFzJuB,KE0JzB,EAAKwE,WAAWF,GAElBA,EAAKG,WAAWzE,GAChBsE,EAAKf,SAAS,EAAKxE,U,oCAIR,IAAD,OACN2F,EAAU,GACVC,EAAY,SAACC,EAAYC,GAC7B,IACsBC,EAAMC,EAE5B,GAHa,EAAKR,YAAYK,EAAYC,IFpKf,MEqKLC,EAEyBF,EAAWpG,KAF9BuG,EAEoCF,EAAWrG,MAFtC,EAAKwC,eAAe8D,KAAS,EAAK9D,eAAe8D,GAAMC,IAEV,CAChF,IAAMT,EAAO,IAAI9E,EAAKoF,EAAYC,GAClC,EAAKG,qBAAqBJ,EAAWpG,KAAMqG,EAAWrG,KAAM8F,EAAK9F,MACjE,EAAKsC,WAAWmB,KAAKqC,KAUnBW,EAA2B,SAACC,EAAQC,GACxC,IAAK,IAAIjD,EAAI,EAAGA,EAAIgD,EAAOE,OAAQlD,IACjC,IAAK,IAAImD,EAAI,EAAGA,EAAIF,EAAUC,OAAQC,IACpCV,EAAUO,EAAOhD,GAAIiD,EAAUE,KAgBrC9G,KAAKsC,eAAe6B,SAAQ,SAACV,EAAQY,GACnC,EAAK/B,eAAe+B,GAAOF,SAAQ,SAACwC,EAAQpC,IA3BnB,SAAAoC,GACzB,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAOE,OAAS,EAAGlD,IACrC,IAAK,IAAImD,EAAInD,EAAI,EAAGmD,EAAIH,EAAOE,OAAQC,IACrCV,EAAUO,EAAOhD,GAAIgD,EAAOG,IAyB9BC,CAAmBJ,GAdO,SAACA,EAAQK,EAAOC,GAC5C,IAAK,IAAI9G,EAAI6G,EAAQ,EAAG7G,GAAK6G,EAAQ,EAAG7G,IACtC,IAAK,IAAIC,EAAI6G,EAAQ,EAAG7G,GAAK6G,EAAQ,EAAG7G,IAAK,CAC3C,IAAMwG,EAAY,EAAKtE,eAAenC,IAAM,EAAKmC,eAAenC,GAAGC,GAE/DwG,GAAaT,EAAQhG,IAAMgG,EAAQhG,GAAGC,KAAOD,IAAM6G,GAAS5G,IAAM6G,IACpEP,EAAyBC,EAAQC,IASrCM,CAAsBP,EAAQtC,EAAOE,GACrC4B,EAAQ9B,GAAS8B,EAAQ9B,GAAS8B,EAAQ9B,GAAS,GACnD8B,EAAQ9B,GAAOE,IAAS,U,2CAKTgC,EAAMC,EAAMW,GAC/BnH,KAAKyC,eAAe8D,GAAQvG,KAAKyC,eAAe8D,GAApB,KACvBvG,KAAKyC,eAAe8D,GADG,eAEzBC,EAAOW,IAFkB,eAGtBX,EAAOW,GACbnH,KAAKyC,eAAe+D,GAAQxG,KAAKyC,eAAe+D,GAApB,KACvBxG,KAAKyC,eAAe+D,GADG,eAEzBD,EAAOY,IAFkB,eAGtBZ,EAAOY,K,iCAGJpB,UACF/F,KAAKyC,eAAesD,EAAK7E,KAAKjB,MAAM8F,EAAK5E,GAAGlB,aAC5CD,KAAKyC,eAAesD,EAAK5E,GAAGlB,MAAM8F,EAAK7E,KAAKjB,MAEnD,IAAMmH,EAAMpH,KAAKuC,WAAW8E,WAAU,SAAAC,GAAI,OAAIA,EAAKrH,OAAS8F,EAAK9F,QACjED,KAAKuC,WAAWsD,OAAOuB,EAAK,K,kCAGlBlG,EAAMC,GAChB,OAAOP,KAAK2G,KAAK,SAACrG,EAAKf,EAAIgB,EAAGhB,EAAM,GAAnB,SAAwBe,EAAKd,EAAIe,EAAGf,EAAM,M,2CAGvC,IAAD,OACboH,EAAS,CACb,CACErH,EAAGH,KAAKkC,WAAW/B,EAAI,EACvBC,EAAGJ,KAAKkC,WAAW9B,EAAI,GAEzB,CACED,EAAGH,KAAKkC,WAAW/B,EAAI,EACvBC,EAAG,EAAIJ,KAAKkC,WAAW9B,EAAI,GAE7B,CACED,EAAG,EAAIH,KAAKkC,WAAW/B,EAAI,EAC3BC,EAAGJ,KAAKkC,WAAW9B,EAAI,GAEzB,CACED,EAAG,EAAIH,KAAKkC,WAAW/B,EAAI,EAC3BC,EAAG,EAAIJ,KAAKkC,WAAW9B,EAAI,GAE7B,CACED,EAAIH,KAAKkC,WAAW/B,EAAI,EACxBC,EAAIJ,KAAKkC,WAAW9B,EAAI,IAI5BJ,KAAKsC,eAAe6B,SAAQ,SAAAc,GAC1BA,EAAId,SAAQ,SAAAe,GACVA,EAAKf,SAAQ,SAAAK,GACX,IAAMiD,EAAM,EAAKzB,YAAYxB,EAAUgD,EAAOhD,EAASlE,SACjDC,EAAM,CACVJ,GFlQgB,MEkQIqE,EAASrE,EAAIqH,EAAOhD,EAASlE,QAAQH,GAAKsH,EAC9DrH,GFnQgB,MEmQIoE,EAASpE,EAAIoH,EAAOhD,EAASlE,QAAQF,GAAKqH,GAGhEjD,EAASkD,gBAAgBnH,gB,KC9OpBoH,E,YAzBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXrH,IAAK,KACLsH,eAAgB,MALD,E,iFASE,IAAD,OACZtH,EAAMuH,SAASC,eAAe,UAAUC,WAAW,MACzDzH,EAAI2B,OAAOC,MAAS8F,OAAOC,WAC3B3H,EAAI2B,OAAOE,OAAS6F,OAAOE,YAC3B,IAAMN,EAAiB,IAAIjG,EAAcrB,EHdV,KGgB/BR,KAAKqI,SAAS,CAAC7H,MAAKsH,mBAAiB,WACnC,EAAKD,MAAMC,eAAeQ,a,+BAK5B,OAAO,4BAAQC,GAAG,e,GAtBGC,IAAMC,WCchBC,G,oOARX,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,W,GARUH,IAAMC,YCQJG,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASC,eAAe,SD2H3C,kBAAmBkB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.02c879bd.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\r\n\r\nexport default class UniqueEntity {\r\n  constructor() {\r\n    this.uuid = uuid();\r\n  }\r\n}","import {PARTICLE_RADIUS} from \"./constants\";\r\nimport UniqueEntity from \"./unique-entity\";\r\n\r\nexport default class Particle extends UniqueEntity {\r\n  constructor(x, y, vel, parity) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.vel = vel;\r\n    this.parity = parity;\r\n    this.acc = {x: 0, y: 0};\r\n  }\r\n\r\n  drawSelf(ctx) {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = '#ff8d8d';\r\n    ctx.arc(this.x, this.y, PARTICLE_RADIUS, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n\r\n  setPosition(position) {\r\n    this.x = position.x;\r\n    this.y = position.y;\r\n  }\r\n\r\n  setAcceleration(acc) {\r\n    this.vel = {x: this.vel.x + acc.x, y: this.vel.y + acc.y};\r\n  }\r\n\r\n  invertVelocity(dimension) {\r\n    this.vel = {\r\n      x: this.vel.x * (dimension === 'x' ? -1 : 1),\r\n      y: this.vel.y * (dimension === 'y' ? -1 : 1)\r\n    };\r\n  }\r\n}","export const PARTICLE_RADIUS = 2;\r\nexport const MAX_PARTICLE_VELOCITY = 0.2;\r\nexport const BACKGROUND_COLOR = '#282c34';\r\nexport const MAX_LINK_DISTANCE = 100;\r\nexport const MAX_PARTICLES_COUNT = 200;\r\nexport const PARITY_MOD = 5;\r\nexport const ACCELERATION = 0.001;","import UniqueEntity from \"./unique-entity\";\r\nimport {MAX_LINK_DISTANCE} from \"./constants\";\r\n\r\nexport default class Link extends UniqueEntity{\r\n  constructor(from, to) {\r\n    super();\r\n    this.from = from;\r\n    this.to = to;\r\n    this.opacity = 'ff';\r\n  }\r\n\r\n  drawSelf(ctx) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = '#ffffff' + this.opacity;\r\n    ctx.moveTo(this.from.x, this.from.y);\r\n    ctx.lineTo(this.to.x, this.to.y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  setOpacity(dist) {\r\n    this.opacity = (MAX_LINK_DISTANCE - dist.toFixed(0)).toString(16);\r\n  }\r\n}","import Particle from \"./particle\";\r\nimport Link from \"./link\";\r\nimport {\r\n  BACKGROUND_COLOR,\r\n  MAX_PARTICLE_VELOCITY,\r\n  PARTICLE_RADIUS,\r\n  MAX_LINK_DISTANCE,\r\n  PARITY_MOD,\r\n  ACCELERATION\r\n} from \"./constants\";\r\n\r\nconst DIMENSIONS = ['x', 'y'];\r\n\r\nexport default class MotionProcess {\r\n  constructor(ctx, particles_num) {\r\n    this.ctx = ctx;\r\n    this.particles_num = particles_num;\r\n    this.paused = true;\r\n    this.timers = {\r\n      links_search: 0\r\n    };\r\n    this.field_size = {x: ctx.canvas.width, y: ctx.canvas.height};\r\n    this.particles_pool = [];\r\n    this.links_pool = [];\r\n    this.square_size = {x: 0, y: 0};\r\n    this.links_registry = {};\r\n    this.current_frame = null;\r\n    this.tick = this.processTick.bind(this);\r\n  }\r\n\r\n  start() {\r\n    this.ctx.translate(0.5, 0.5);\r\n    this.initParticles();\r\n    this.paused = false;\r\n    requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  processTick() {\r\n    this.drawTick();\r\n\r\n    if (!this.paused) {\r\n      this.current_frame = requestAnimationFrame(this.tick);\r\n    }\r\n  }\r\n\r\n  drawTick() {\r\n    this.drawField();\r\n    this.shiftParticles();\r\n    this.drawLinks();\r\n    this.handleAcceleration();\r\n  }\r\n\r\n  initParticles() {\r\n    const x_squares = Math.floor(this.field_size.x / MAX_LINK_DISTANCE);\r\n    const y_squares = Math.floor(this.field_size.y / MAX_LINK_DISTANCE);\r\n\r\n    this.square_size.x = this.field_size.x / x_squares;\r\n    this.square_size.y = this.field_size.y / y_squares;\r\n\r\n    for (let x = 0; x < x_squares; x++) {\r\n      const column = [];\r\n\r\n      for (let y = 0; y < y_squares; y++) {\r\n        column.push([]);\r\n      }\r\n\r\n      this.particles_pool.push(column);\r\n    }\r\n\r\n    for (let i = 0; i < this.particles_num; i++) {\r\n      const x = Math.round(Math.random() * (this.field_size.x));\r\n      const y = Math.round(Math.random() * (this.field_size.y));\r\n      const vel = {\r\n        x: +((Math.random() - 0.5) * MAX_PARTICLE_VELOCITY).toFixed(2),\r\n        y: +((Math.random() - 0.5) * MAX_PARTICLE_VELOCITY).toFixed(2),\r\n      };\r\n      const next_particle = new Particle(x, y, vel, i % PARITY_MOD);\r\n      const pool_x_idx = (Math.ceil(x / this.square_size.x) || 1) - 1;\r\n      const pool_y_idx = (Math.ceil(y / this.square_size.y) || 1) - 1;\r\n\r\n      this.particles_pool[pool_x_idx][pool_y_idx].push(next_particle);\r\n    }\r\n  }\r\n\r\n  drawField() {\r\n    this.ctx.fillStyle = BACKGROUND_COLOR;\r\n    this.ctx.fillRect(0, 0, this.field_size.x, this.field_size.y);\r\n  }\r\n\r\n  shiftParticles() {\r\n    this.particles_pool.forEach((x_pool, x_idx) => {\r\n      x_pool.forEach((y_pool, y_idx) => {\r\n        y_pool.forEach(particle => {\r\n          const next_position = {};\r\n\r\n          DIMENSIONS.forEach(dim => {\r\n            let next = particle[dim] + particle.vel[dim];\r\n            const end_border = this.field_size[dim] - PARTICLE_RADIUS;\r\n\r\n            if (next > end_border && particle.vel[dim] > 0) {\r\n              next = 2 * end_border - particle.vel[dim] - particle[dim] - PARTICLE_RADIUS;\r\n              particle.invertVelocity(dim);\r\n            } else if (next < PARTICLE_RADIUS && particle.vel[dim] < 0) {\r\n              next = Math.abs(particle.vel[dim]) - particle[dim] + PARTICLE_RADIUS;\r\n              particle.invertVelocity(dim);\r\n            }\r\n\r\n            next_position[dim] = next;\r\n          });\r\n\r\n          particle.setPosition(next_position);\r\n          particle.drawSelf(this.ctx);\r\n        });\r\n      });\r\n    });\r\n    this.particles_pool.forEach((col, x_idx) => {\r\n      col.forEach((pool, y_idx) => {\r\n        pool.forEach(particle => {\r\n          const last_position = {x: x_idx, y: y_idx};\r\n          const shift = this.getPoolShift(last_position, particle);\r\n\r\n          if (shift.x || shift.y) {\r\n            this.migrateParticle(particle, last_position, shift);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  getPoolShift(cur, next) {\r\n    const shift = {x: 0, y: 0};\r\n\r\n    DIMENSIONS.forEach(dim => {\r\n      if (next[dim] / this.square_size[dim] > cur[dim] + 1) {\r\n        shift[dim]++;\r\n      } else if (next[dim] / this.square_size[dim] < cur[dim]) {\r\n        shift[dim]--;\r\n      }\r\n    });\r\n\r\n    return shift;\r\n  }\r\n\r\n  migrateParticle(particle, cur_pos, shift) {\r\n    const cur_pool = this.particles_pool[cur_pos.x][cur_pos.y];\r\n    const next_pool = this.particles_pool[cur_pos.x + shift.x][cur_pos.y + shift.y];\r\n    const cur_idx = cur_pool.indexOf(particle);\r\n\r\n    cur_pool.splice(cur_idx, 1);\r\n    next_pool.push(particle);\r\n  }\r\n\r\n  drawLinks() {\r\n    this.createLinks();\r\n    this.links_pool.forEach(link => {\r\n      const dist = this.getDistance(link.from, link.to);\r\n      if (dist > MAX_LINK_DISTANCE) {\r\n        this.removeLink(link);\r\n      }\r\n      link.setOpacity(dist);\r\n      link.drawSelf(this.ctx);\r\n    });\r\n  }\r\n\r\n  createLinks() {\r\n    const checked = {};\r\n    const checkPair = (particle_1, particle_2) => {\r\n      const dist = this.getDistance(particle_1, particle_2);\r\n      const isRegistered = (id_1, id_2) => this.links_registry[id_1] && this.links_registry[id_1][id_2];\r\n\r\n      if (dist <= MAX_LINK_DISTANCE && !isRegistered(particle_1.uuid, particle_2.uuid)) {\r\n        const link = new Link(particle_1, particle_2);\r\n        this.addLinkRegistryEntry(particle_1.uuid, particle_2.uuid, link.uuid);\r\n        this.links_pool.push(link);\r\n      }\r\n    };\r\n    const checkSelfParticles = square => {\r\n      for (let i = 0; i < square.length - 1; i++) {\r\n        for (let j = i + 1; j < square.length; j++) {\r\n          checkPair(square[i], square[j]);\r\n        }\r\n      }\r\n    };\r\n    const checkTwoSquaresParticles = (square, neighbour) => {\r\n      for (let i = 0; i < square.length; i++) {\r\n        for (let j = 0; j < neighbour.length; j++) {\r\n          checkPair(square[i], neighbour[j]);\r\n        }\r\n      }\r\n    };\r\n    const checkNeighbourSquares = (square, x_cur, y_cur) => {\r\n      for (let x = x_cur - 1; x <= x_cur + 1; x++) {\r\n        for (let y = y_cur - 1; y <= y_cur + 1; y++) {\r\n          const neighbour = this.particles_pool[x] && this.particles_pool[x][y];\r\n\r\n          if (neighbour && checked[x] && checked[x][y] && (x !== x_cur || y !== y_cur)) {\r\n            checkTwoSquaresParticles(square, neighbour);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.particles_pool.forEach((column, x_idx) => {\r\n      this.particles_pool[x_idx].forEach((square, y_idx) => {\r\n        checkSelfParticles(square);\r\n        checkNeighbourSquares(square, x_idx, y_idx);\r\n        checked[x_idx] = checked[x_idx] ? checked[x_idx] : {};\r\n        checked[x_idx][y_idx] = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  addLinkRegistryEntry(id_1, id_2, link_id) {\r\n    this.links_registry[id_1] = this.links_registry[id_1] ? {\r\n      ...this.links_registry[id_1],\r\n      [id_2]: link_id\r\n    } : {[id_2]: link_id};\r\n    this.links_registry[id_2] = this.links_registry[id_2] ? {\r\n      ...this.links_registry[id_2],\r\n      [id_1]: link_id\r\n    } : {[id_1]: link_id};\r\n  }\r\n\r\n  removeLink(link) {\r\n    delete this.links_registry[link.from.uuid][link.to.uuid];\r\n    delete this.links_registry[link.to.uuid][link.from.uuid];\r\n\r\n    const idx = this.links_pool.findIndex(item => item.uuid === link.uuid);\r\n    this.links_pool.splice(idx, 1);\r\n  }\r\n\r\n  getDistance(from, to) {\r\n    return Math.sqrt((from.x - to.x) ** 2 + (from.y - to.y) ** 2);\r\n  }\r\n\r\n  handleAcceleration() {\r\n    const center = [\r\n      {\r\n        x: this.field_size.x / 4,\r\n        y: this.field_size.y / 4\r\n      },\r\n      {\r\n        x: this.field_size.x / 4,\r\n        y: 3 * this.field_size.y / 2\r\n      },\r\n      {\r\n        x: 3 * this.field_size.x / 2,\r\n        y: this.field_size.y / 4\r\n      },\r\n      {\r\n        x: 3 * this.field_size.x / 2,\r\n        y: 3 * this.field_size.y / 4\r\n      },\r\n      {\r\n        x:  this.field_size.x / 2,\r\n        y:  this.field_size.y / 2\r\n      },\r\n    ];\r\n\r\n    this.particles_pool.forEach(col => {\r\n      col.forEach(pool => {\r\n        pool.forEach(particle => {\r\n          const len = this.getDistance(particle, center[particle.parity]);\r\n          const acc = {\r\n            x: -ACCELERATION * (particle.x - center[particle.parity].x) / len,\r\n            y: -ACCELERATION * (particle.y - center[particle.parity].y) / len\r\n          };\r\n\r\n          particle.setAcceleration(acc);\r\n        });\r\n      });\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport MotionProcess from \"../common/motion-process\";\r\nimport {MAX_PARTICLES_COUNT} from \"../common/constants\";\r\n\r\nclass Background extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ctx: null,\r\n      motion_process: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ctx = document.getElementById('canvas').getContext('2d');\r\n    ctx.canvas.width  = window.innerWidth;\r\n    ctx.canvas.height = window.innerHeight;\r\n    const motion_process = new MotionProcess(ctx, MAX_PARTICLES_COUNT);\r\n\r\n    this.setState({ctx, motion_process}, () => {\r\n      this.state.motion_process.start();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <canvas id=\"canvas\"/>\r\n  }\r\n}\r\n\r\nexport default Background;","import React from 'react';\nimport Background from \"./components/background\";\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Background/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}